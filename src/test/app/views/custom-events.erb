<style>
h2 {
  margin-top: 0;
}
.test-wrap {
  width: 45%;
  float: left;
}

#html5-test {
  border-right: 2px dashed #ccc;
  margin-right: 5%;
}

#qunit-wrap {
  padding-top: 2em;
  clear: both;
}
</style>

<script type="text/javascript">
function commonSettings(enclosure) {
  return {
    api_url: '<%= @panda.api_url %>',
    uploader_dir: '/panda_uploader',
    upload_strategy: new PandaUploader.UploadOnSelect(),
    onwidgetload: createHandler('onwidgetload', enclosure),
    onchange: createHandler('onchange', enclosure),
    onerror: createHandler('onerror', enclosure),
    onabort: createHandler('onabort', enclosure),
    onprogress: createHandler('onprogress', enclosure),
    onreadystatechange: createHandler('onreadystatechange', enclosure),
    onloadstart: createHandler('onloadstart', enclosure),
    onload: createHandler('onload', enclosure),
    onsuccess: createHandler('onsuccess', enclosure)
  };
}


function createHandler(name, within) {
  return function () {
    recordEvent(name, within, arguments);
    var handler = window[name];
    if (handler) {
      handler.apply(window, [within, arguments])
    }
  }
}

var recorded_events = []
function recordEvent(name, within, args) {
  // Store for later reference
  recorded_events.push([name, args]);

  // Display on table
  var $table = findTable();
  if ($table.length == 0) {
    $('<table class="event-record"></table>').appendTo(within);
    $table = findTable();
  }

  var $latest_cells = $table.find('tr:last td');
  var latest_event = $latest_cells.eq(0).text();
  if (name == latest_event) {
    var $latest_counter = $latest_cells.eq(1);
    $latest_counter.text($latest_counter.text()*1 + 1);
  }
  else  {
    $table.append('<tr><td>' + name + '</td><td>1</td></tr>');
  }
  
  function findTable() {
    return $(within).find('table.event-record');
  }
}
function getEvents(etype) {
  var ret = [];
  $.each(recorded_events, function() {
    if (this[0] == etype) {
      ret.push(this[1]);
    }
  });
  return ret;
}

$(document).ready(function(){
  $('#btn-upload-error').click(function() {
    test("error event", 5, function() {
      var error_event_calls = getEvents('onerror');

      // Callback
      equals(1, error_event_calls.length, "Error event was called only once");

      var evt = error_event_calls[0][0];
      var file = error_event_calls[0][1];

      // Event
      equals('error', evt.type, "Event has type 'error'");
      ok(evt.timeStamp, "Event has a timestamp");

      // File
      ok(file.name, "File has a name");
      ok(file.size*1, "File has a size");
    });
    
    test("readystatuschange event", function(){
      var error_event_calls = getEvents('onreadystatuschange');
      var evt = error_event_calls[0][0];
    });
    
    QUnit.start();
  });
});

function parseJSON(json) {
  // OH NOES!!! I'm using eval()!!!
  return eval('(' + json + ')');
}

</script>

<div class="test-wrap" id="html5-test">
  <h2>HTML5 test</h2>
  <form action="/player" method="get">
    <label>Upload a video<br/></label>

    <input type="hidden" id="html5-field" name="panda_video_id" />
    <div id="html5-progress" class="panda_upload_progress"></div>

    <p><input type="submit" value="Save" /></p>
  </form>
  <script type="text/javascript">
  var html5_settings = {
    upload_progress_id: 'html5-progress'
  };
  jQuery.extend(html5_settings, commonSettings('#html5-test'));
  $('#html5-field').pandaUploader(<%= @panda.signed_params("POST", "/videos.json").to_json %>, html5_settings);
  </script>
</div>

<div class="test-wrap" id="flash-test">
  <h2>Flash test</h2>
  <form action="/player" method="get">
    <label>Upload a video<br/></label>

    <input type="hidden" id="flash-field" name="panda_video_id" />
    <div id="flash-progress" class="panda_upload_progress"></div>

    <p><input type="submit" value="Save" /></p>
  </form>
  <script type="text/javascript">
  var flash_settings = {
    upload_progress_id: 'flash-progress',
    widget: new PandaUploader.FlashWidget()
  };
  jQuery.extend(flash_settings, commonSettings('#flash-test'));
  $('#flash-field').pandaUploader(<%= @panda.signed_params("POST", "/videos.json").to_json %>, flash_settings);
  </script>
</div>

<div id="qunit-wrap">
  <p><input type="submit" id="btn-upload-error" value="Test: upload error" /></p>

  <link href="/qunit/qunit.css" rel="stylesheet" type="text/css" />
  <script src="/qunit/qunit.js"></script>
  <h1 id="qunit-header"><code>panda_uploader</code> JS unit tests</h1>
  <h2 id="qunit-banner"></h2>
  <h2 id="qunit-userAgent"></h2>
  <ol id="qunit-tests"></ol>
</div>
